1. MaxOpenPriceMapper.java 

import java.io.IOException;
import org.apache.hadoop.io.FloatWritable;
import org.apache.hadoop.io.LongWritable;
import org.apache.hadoop.io.Text;
import org.apache.hadoop.mapreduce.Mapper;

public class MaxOpenPriceMapper extends Mapper<LongWritable, Text, Text, FloatWritable> {

	@Override
	public void map(LongWritable key, Text value, Context context)
			throws IOException, InterruptedException {

		String line = value.toString();
		String[] items = line.split(",");
		
		String stock = items[1];
		Float openPrice  =Float.parseFloat(items[3]);
		
		context.write(new Text(stock),new FloatWritable(openPrice));
	}
}



2. MaxOpenPriceReducer.java

import java.io.IOException;
import org.apache.hadoop.io.FloatWritable;
import org.apache.hadoop.io.Text;
import org.apache.hadoop.mapreduce.Reducer;

 public class MaxOpenPriceReducer
 extends Reducer<Text, FloatWritable, Text, FloatWritable> {

	 @Override
	 public void reduce(Text key, Iterable<FloatWritable> values, Context context)
			 throws IOException, InterruptedException {

		 float maxOpenPrice=Float.MIN_VALUE;
		 
		 //Iterate all temperatures for a year and calculate maximum
		 for (FloatWritable value : values) {
			 maxOpenPrice = Math.max(maxOpenPrice, value.get());
		 }
		 
		 //Write output
		 context.write(key, new FloatWritable(maxOpenPrice));
	 }
 }





3. MaxOpenPrice.java 


import org.apache.hadoop.fs.Path;
import org.apache.hadoop.io.FloatWritable;
import org.apache.hadoop.io.Text;
import org.apache.hadoop.mapreduce.Job;
import org.apache.hadoop.mapreduce.lib.input.FileInputFormat;
import org.apache.hadoop.mapreduce.lib.input.TextInputFormat;
import org.apache.hadoop.mapreduce.lib.output.FileOutputFormat;
import org.apache.hadoop.mapreduce.lib.output.TextOutputFormat;

public class MaxOpenPrice {

	public static void main(String[] args) throws Exception {
		if (args.length != 2) {
			System.err.println("Usage: MaxOpenPrice <input path> <output path>");
			System.exit(-1);
		}

		// Define MapReduce job
		Job job = new Job();
		job.setJarByClass(MaxOpenPrice.class);
		job.setJobName("MaxOpenPrice");

		// Set input and output locations
		FileInputFormat.addInputPath(job, new Path(args[0]));
		FileOutputFormat.setOutputPath(job, new Path(args[1]));

		// Set Input and Output formats
		job.setInputFormatClass(TextInputFormat.class);
		job.setOutputFormatClass(TextOutputFormat.class);

		job.setMapperClass(MaxOpenPriceMapper.class);
		job.setReducerClass(MaxOpenPriceReducer.class);

		// Output types
		job.setOutputKeyClass(Text.class);
		job.setOutputValueClass(FloatWritable.class);

		// Submit job
		System.exit(job.waitForCompletion(true) ? 0 : 1);
	}
}
